#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

compile '/assets/css/*/' do
  filter :sass, :style => :compressed
  filter :yuicompressor, :type => :css
end

compile '/assets/js/*/' do
  filter :yuicompressor, :type => :js
end

compile '/humans/' do
  filter :erb
end

compile '/robots/' do
  filter :erb
end

compile '/sitemap/' do
  filter :haml
end

compile '/' do
  filter :haml
end

compile '*' do
  if item.binary?
    # don't filter binary items
  else

    ext = item[:extension].nil? ? nil : item[:extension].split('.').last

    if ext == 'erb'
      filter :erb
    elsif ext == 'haml' || ext.nil?
      filter :haml, :format => :html5, :attr_wrapper => '"'
    elsif ext == 'md' || ext == 'markdown'
      filter :erb
      filter :rdiscount
    elsif ext == 'html'
      # don't filter
    elsif ext == 'php'
      # don't filter
    else
      raise "Filter is not configured for #{item.identifier} in Rules file."
    end

    layout 'default'

  end
end

route '/assets/css/*/' do
  item.identifier.chop + '.css'
end

route '/assets/js/*/' do
  item.identifier.chop + '.js'
end

route '/humans/' do
  item.identifier.chop + '.txt'
end

route '/robots/' do
  item.identifier.chop + '.txt'
end

route '/sitemap/' do
  item.identifier.chop + '.xml'
end

route '/' do
  item.identifier + 'index.php'
end

route '*' do
  if item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end

layout '*', :haml, :format => :html5, :attr_wrapper => '"'
